server:
  port: 8082
#  ssl:
#    key-store-type: PKCS12
#    key-store: classpath:keystore/onsen-localhost.p12
#    key-store-password: rootroot
#    key-alias: localhost
#
#    ##trust store location
#trust:
#  store: classpath:keystore/onsen-localhost.p12
#  password: rootroot

spring:
  application:
    name: onsen-main
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    bus:
      enabled: on
      refresh:
        enabled: true
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

logging:
  level:
    org.springframework.web: DEBUG
    com.netflix.eureka: DEBUG
    com.netflix.discovery: DEBUG
    feign: DEBUG
    org.springframework.cloud.openfeign: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: "*"  # tell actuator to expose all endpoints, including refresh.
  health:
    readiness-state:  # http://localhost:8082/actuator/health/readiness
      enabled: true
    liveness-state:   # http://localhost:8082/actuator/health/liveness
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      enabled: true
  info:
    env:
      enabled: true

endpoints:
  shutdown:
    enabled: true # POST -> http://localhost:8082/actuator/shutdown

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetchRegistry: true       # by default true, here false since the eureka server doesn't need to fetch the registry, it is the registry?
    registerWithEureka: true  # by default true, here false since it shouldn 't register itself
    serviceUrl:
      defaultZone: http://localhost:8070/eureka


build-info:
  appName: ${spring.application.name}
  environment: local
