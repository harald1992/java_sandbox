server:
  port: 8072
#  ssl:
#    enabled: true
#    key-alias: localhost
#    key-store-password: rootroot
#    key-store: classpath:keystore/onsen-localhost.p12
#    key-store-type: PKCS12

spring:
  application:
    name: onsen-api-gateway
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true
#      httpclient:
#        ssl:
#          useInsecureTrustManager: true
# TODO: CHANGE ALL TRAFFIC BACK TO HTTP, TLS and HTTPS might be implemented using Ingress Controllers or Service Mesh or smth.

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    io:
      netty:
        resolver:
          dns: DEBUG

management:
  endpoint:
    gateway:
      enabled: true



# HOW to config via app
#spring:
#  cloud:
#    gateway:
#      routes:
#        - id: login-route
#          uri: ${LOGIN_ROUTE_URI:http://localhost:8081} # can also just do the localhost, but ${} uses environment variables, and the default is localhost 8081
#          predicates: # what are we matching on
#            - Path=/api/**
#          filters:
#            - PrefixPath=/api
##            - name: AddResponseHeader
##              args:
##                name: X-Powered-By
##                value: Touched By Gateway Service
#            - AddResponseHeader=X-Powered-By,Touched By Gateway Service

